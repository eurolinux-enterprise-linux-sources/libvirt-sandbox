/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _LIBVIRT_SANDBOX_PROTOCOL_H_RPCGEN
#define _LIBVIRT_SANDBOX_PROTOCOL_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define GVIR_SANDBOX_PROTOCOL_PACKET_MAX 262144
#define GVIR_SANDBOX_PROTOCOL_LEN_MAX 4
#define GVIR_SANDBOX_PROTOCOL_HEADER_MAX 16
#define GVIR_SANDBOX_PROTOCOL_PAYLOAD_MAX 262128
#define GVIR_SANDBOX_PROTOCOL_HANDSHAKE_WAIT 033
#define GVIR_SANDBOX_PROTOCOL_HANDSHAKE_SYNC 034

enum GVirSandboxProtocolProc {
        GVIR_SANDBOX_PROTOCOL_PROC_STDIN = 1,
        GVIR_SANDBOX_PROTOCOL_PROC_STDOUT = 2,
        GVIR_SANDBOX_PROTOCOL_PROC_STDERR = 3,
        GVIR_SANDBOX_PROTOCOL_PROC_EXIT = 4,
        GVIR_SANDBOX_PROTOCOL_PROC_QUIT = 5,
};
typedef enum GVirSandboxProtocolProc GVirSandboxProtocolProc;

enum GVirSandboxProtocolType {
        GVIR_SANDBOX_PROTOCOL_TYPE_MESSAGE = 0,
        GVIR_SANDBOX_PROTOCOL_TYPE_DATA = 1,
};
typedef enum GVirSandboxProtocolType GVirSandboxProtocolType;

enum GVirSandboxProtocolStatus {
        GVIR_SANDBOX_PROTOCOL_STATUS_OK = 0,
};
typedef enum GVirSandboxProtocolStatus GVirSandboxProtocolStatus;

struct GVirSandboxProtocolHeader {
        GVirSandboxProtocolProc proc;
        GVirSandboxProtocolType type;
        GVirSandboxProtocolStatus status;
        u_int serial;
};
typedef struct GVirSandboxProtocolHeader GVirSandboxProtocolHeader;

struct GVirSandboxProtocolMessageExit {
        int status;
};
typedef struct GVirSandboxProtocolMessageExit GVirSandboxProtocolMessageExit;

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_GVirSandboxProtocolProc (XDR *, GVirSandboxProtocolProc*);
extern  bool_t xdr_GVirSandboxProtocolType (XDR *, GVirSandboxProtocolType*);
extern  bool_t xdr_GVirSandboxProtocolStatus (XDR *, GVirSandboxProtocolStatus*);
extern  bool_t xdr_GVirSandboxProtocolHeader (XDR *, GVirSandboxProtocolHeader*);
extern  bool_t xdr_GVirSandboxProtocolMessageExit (XDR *, GVirSandboxProtocolMessageExit*);

#else /* K&R C */
extern bool_t xdr_GVirSandboxProtocolProc ();
extern bool_t xdr_GVirSandboxProtocolType ();
extern bool_t xdr_GVirSandboxProtocolStatus ();
extern bool_t xdr_GVirSandboxProtocolHeader ();
extern bool_t xdr_GVirSandboxProtocolMessageExit ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_LIBVIRT_SANDBOX_PROTOCOL_H_RPCGEN */
